name: PyRunner Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run unit tests
      run: |
        pytest tests/unit/ -v --tb=short --cov=app --cov-report=term-missing
    
    - name: Run integration tests
      run: |
        pytest tests/integration/ -v --tb=short --timeout=60 --asyncio-mode=auto
    
    - name: Generate coverage report
      run: |
        pytest tests/ --cov=app --cov-report=xml --cov-report=html --asyncio-mode=auto
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  docker-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        docker build -t pyrunner-test .
    
    - name: Run Docker container
      run: |
        docker run -d -p 8000:8000 --name pyrunner-test pyrunner-test
        sleep 10  # Wait for service to start
    
    - name: Test Docker service
      run: |
        curl -f http://localhost:8000/ || exit 1
        curl -f -X POST http://localhost:8000/run \
          -H "Content-Type: application/json" \
          -d '{"code": "print(\"Docker test successful!\")"}' || exit 1
    
    - name: Stop Docker container
      run: |
        docker stop pyrunner-test
        docker rm pyrunner-test

  security-scan:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security scan with bandit
      run: |
        pip install bandit
        bandit -r app/ -f json -o bandit-report.json || true
    
    - name: Upload security scan results
      uses: actions/upload-artifact@v3
      with:
        name: security-scan-results
        path: bandit-report.json

  performance-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run performance tests
      run: |
        pytest tests/integration/test_resource_limits.py::TestResourceMonitoring -v --tb=short --asyncio-mode=auto
    
    - name: Run slow integration tests
      run: |
        pytest tests/integration/ -m slow -v --tb=short --timeout=120 --asyncio-mode=auto